CREATE TABLE IF NOT EXISTS Users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    login VARCHAR(40) UNIQUE NOT NULL,
    name VARCHAR(40) NOT NULL,
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS Genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name ENUM('Комедия', 'Драма', 'Мультфильм', 'Триллер', 'Документальный', 'Боевик') UNIQUE
);

CREATE TABLE IF NOT EXISTS Rates (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name ENUM('G', 'PG', 'PG-13', 'R', 'NC-17') UNIQUE
);

CREATE TABLE IF NOT EXISTS directors (
    directors_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS Films (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(40) NOT NULL,
    description VARCHAR(200),
    release_date DATE NOT NULL,
    duration INTEGER NOT NULL,
    rate_id INTEGER REFERENCES Rates
);

CREATE TABLE IF NOT EXISTS FilmGenres (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id BIGINT REFERENCES Films ON DELETE CASCADE,
    genre_id INTEGER REFERENCES Genres
);

CREATE TABLE IF NOT EXISTS Likes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id BIGINT REFERENCES Films ON DELETE CASCADE,
    user_id BIGINT REFERENCES Users ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FriendShip (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT REFERENCES Users ON DELETE CASCADE,
    friend_id BIGINT REFERENCES Users ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    entity_id BIGINT NOT NULL,
    user_id BIGINT REFERENCES Users(id),
    event_type VARCHAR(6) NOT NULL,
    operation VARCHAR(6) NOT NULL,
    create_time TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS Reviews (
    reviewId BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content VARCHAR(255) NOT NULL,
    isPositive  BOOLEAN,
    userId BIGINT REFERENCES Users ON DELETE CASCADE,
    filmId BIGINT REFERENCES Films ON DELETE CASCADE,
    useful INTEGER DEFAULT 0
);

CREATE TABLE IF NOT EXISTS ReviewsScore (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    isPositive  INTEGER DEFAULT 0,
    userId BIGINT REFERENCES Users ON DELETE CASCADE,
    reviewsId BIGINT REFERENCES Reviews ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS film_directors (
    film_id BIGINT REFERENCES films (id) ON DELETE CASCADE,
    director_id BIGINT REFERENCES directors (directors_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, director_id)
);